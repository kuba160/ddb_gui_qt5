name: ddb_gui_qt5

on: [ push, pull_request ]

jobs:
  build_linux_static:
    name: Static linux
    runs-on: ubuntu-latest
    container: ubuntu:22.04
    steps:
    - name: Install dependencies for Linux
      run: |
        apt-get -qq update
        apt-get install -y -qq zlib1g-dev libdbus-1-dev libzstd-dev libglib2.0-dev\
          libxcb-xinput0 g++ wget zip unzip sudo cmake zip mesa-common-dev libegl1-mesa-dev libharfbuzz-dev libfontconfig-dev \
          bzip2 dbus dirmngr dpkg-dev fakeroot g++ g++-11 gnupg gnupg-l10n gnupg-utils \
          gpg gpg-agent gpg-wks-client gpg-wks-server gpgconf gpgsm gstreamer1.0-gl \
          gstreamer1.0-plugins-base iso-codes libalgorithm-diff-perl \
          libalgorithm-diff-xs-perl libalgorithm-merge-perl libapparmor1 libassuan0\
          libasyncns0 libblkid-dev libcairo2 libcap2-bin libcdparanoia0 libdbus-1-3 \
          libdpkg-perl libdrm-amdgpu1 libdrm-common libdrm-intel1 libdrm-nouveau2 \
          libdrm-radeon1 libdrm2 libdw1 libedit2 libegl-dev libegl-mesa0 libegl1 \
          libelf1 libfakeroot libffi-dev libfile-fcntllock-perl libflac8 libgbm1 \
          libgdbm-compat4 libgdbm6 libgl-dev libgl1 libgl1-amber-dri libgl1-mesa-dri \
          libglapi-mesa libgles-dev libgles1 libgles2 libglib2.0-0 libglib2.0-bin \
          libglib2.0-data libglib2.0-dev libglib2.0-dev-bin libglvnd-core-dev \
          libglvnd-dev libglvnd0 libglx-dev libglx-mesa0 libglx0 libgraphene-1.0-0 \
          libgstreamer-plugins-base1.0-0 libgstreamer1.0-0 libgudev-1.0-0 libksba8 \
          libllvm15 liblocale-gettext-perl libmount-dev libmpdec3 libnpth0 libogg0 \
          libopengl-dev libopengl0 libopus0 liborc-0.4-0 libpam-cap libpciaccess0 \
          libpcre16-3 libpcre2-16-0 libpcre2-32-0 libpcre2-dev libpcre2-posix3 \
          libpcre3-dev libpcre32-3 libpcrecpp0v5 libperl5.34 libpixman-1-0 \
          libpthread-stubs0-dev libpulse-mainloop-glib0 libpulse0 libpython3-stdlib \
          libpython3.10-minimal libpython3.10-stdlib libreadline8 libselinux1-dev \
          libsensors-config libsensors5 libsepol-dev libsndfile1 libsqlite3-0 \
          libstdc++-11-dev libtheora0 libunwind8 libvisual-0.4-0 libvorbis0a \
          libvorbisenc2 libwayland-client0 libwayland-cursor0 libwayland-egl1 \
          libwayland-server0 libx11-dev libx11-xcb1 libxau-dev libxcb-dri2-0 \
          libxcb-dri3-0 libxcb-present0 libxcb-xkb1 libxcb1-dev libxdmcp-dev libxext6 \
          libxfixes3 libxkbcommon0 libxrender1 libxshmfence1 libxxf86vm1 \
          lto-disabled-list media-types netbase patch perl perl-modules-5.34 \
          pinentry-curses pkg-config python3 python3-distutils python3-lib2to3 \
          python3-minimal python3.10 python3.10-minimal readline-common \
          shared-mime-info uuid-dev x11proto-dev xdg-user-dirs xkb-data \
          xorg-sgml-doctools xtrans-dev xz-utils zlib1g-dev libudev-dev
    - name: Checkout for Linux
      uses: actions/checkout@v1
    - name: Fix library links
      run: chmod +x scripts/liblinks.sh; scripts/liblinks.sh
    - name: Build for Linux
      run: chmod +x scripts/build_static.sh; scripts/build_static.sh
    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: linux
        path: ddb_gui_qt5_linux-static.zip
  build_linux_shared:
    name: Shared linux
    runs-on: ubuntu-latest
    container: ubuntu:22.04
    steps:
    - name: Install dependencies for Linux
      run: |
        apt-get -qq update
        apt-get install -y -qq sudo cmake zip
    - name: Install Qt
      uses: jurplel/install-qt-action@v3
      with:
        aqtversion: '==3.1.*'
        version: '6.5.2'
        host: 'linux'
        target: 'desktop'
        arch: 'gcc_64'
        modules: 'qtcharts'
    - name: Checkout for Linux
      uses: actions/checkout@v1
    - name: Build for Linux
      run: cmake .; cmake --build . ; mkdir -p plugins; cp ddb_gui_qt5.so plugins/; zip -r ddb_gui_qt5_linux-shared.zip plugins/ddb_gui_qt5.so
    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: linux
        path: ddb_gui_qt5_linux-shared.zip
  build_windows_static:
    name: Static Windows
    runs-on: windows-latest
    steps:
    - name: Checkout for Windows
      uses: actions/checkout@v2
      with:
        submodules: true
    - name: Install msys2
      uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        update: true
        install: >-
         mingw-w64-x86_64-toolchain make tar unzip xz zip mingw-w64-x86_64-qt6-static mingw-w64-x86_64-cmake mingw-w64-x86_64-ninja
    - name: Build for Windows
      shell: msys2 {0}
      run: CMAKE_PREFIX_PATH=/mingw64/qt6-static/ cmake . ; cmake --build . ; mkdir -p plugins; mv release/*.dll plugins/ ; zip -r ddb_gui_qt5_windows-static.zip plugins/*.dll
    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: windows
        path: ddb_gui_qt5_windows-static.zip
  build_windows_shared:
    name: Shared Windows
    runs-on: windows-latest
    steps:
    - name: Checkout for Windows
      uses: actions/checkout@v2
      with:
        submodules: true
    - name: Install msys2
      uses: msys2/setup-msys2@v2
      with:
        msystem: CLANG64
        update: true
        install: >-
          mingw-w64-clang-x86_64-toolchain make tar unzip xz zip mingw-w64-clang-x86_64-qt6-svg mingw-w64-clang-x86_64-qt6-declarative mingw-w64-clang-x86_64-qt6-base mingw-w64-clang-x86_64-qt6-charts mingw-w64-clang-x86_64-cmake mingw-w64-clang-x86_64-ninja
    - name: Build for Windows
      shell: msys2 {0}
      run: cmake . ; cmake --build . ; mkdir -p plugins;mv ddb_gui_qt5*.dll plugins/ ; zip -r ddb_gui_qt5_windows-shared.zip plugins/*.dll
    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: windows
        path: ddb_gui_qt5_windows-shared.zip
  build_macos_static:
   name: Static macOS
   runs-on: macos-latest
   steps:
   - name: Checkout for macOS
     uses: actions/checkout@v2
     with:
       submodules: true
   - name: Install dependencies
     run: |
       brew install gcc zip make
       wget -q https://github.com/kuba160/qt5_static_build/releases/download/6.5.2/qt_6.5.2_static_macos.zip
       unzip -qq qt_6.5.2_static_macos.zip
   - name: Build for macOS
     run: |
       export PATH="/usr/local/opt/zip/bin:$PATH"
       export PATH="/usr/local/opt/make/libexec/gnubin:$PATH"
       CMAKE_PREFIX_PATH=$PWD/qt5_static/ cmake .
       cmake --build .
       mkdir -p plugins
       cp ddb_gui_qt5.dylib plugins/
       zip -r ddb_gui_qt5_macos-static.zip plugins/*.dylib
   - name: Upload artifact
     uses: actions/upload-artifact@v2
     with:
       name: macos
       path: ddb_gui_qt5_macos-static.zip

  build_macos_shared:
    name: Shared macOS
    runs-on: macos-latest
    steps:
    - name: Checkout for macOS
      uses: actions/checkout@v2
      with:
        submodules: true
    - name: Install dependencies
      run: brew install qt@6 gcc zip make
    - name: Build for macOS
      run: |
        export PATH="/usr/local/opt/qt@5/bin:$PATH"
        export LDFLAGS="-L/usr/local/opt/qt@5/lib"
        export CPPFLAGS="-I/usr/local/opt/qt@5/include"
        export PKG_CONFIG_PATH="/usr/local/opt/qt@5/lib/pkgconfig"
        export PATH="/usr/local/opt/zip/bin:$PATH"
        export PATH="/usr/local/opt/make/libexec/gnubin:$PATH"
        echo $PATH
        cmake .
        cmake --build .
        mkdir -p plugins
        cp ddb_gui_qt5.dylib plugins/
        zip -r ddb_gui_qt5_macos-shared.zip plugins/*.dylib
    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: macos
        path: ddb_gui_qt5_macos-shared.zip
